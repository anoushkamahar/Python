#Scraping in XML
#Taking out temperature of a particular state and 
import requests
from lxml import objectify

num_periods = 4
parameter = 'Average Temperature'
state_id = '44'
month_num = '08'
year = '2016'


URL_template = 'https://www.ncdc.noaa.gov/cag/statewide/rankings/%s-tavg-%s%s/data.xml'

URL = URL_template % (state_id,year,month_num)
response = requests.get(URL).content

root=objectify.fromstring(response)

print(my_wm_username)
print(root['data'][num_periods]['value'])
print(root['data'][num_periods]['mean'])
print(root['data'][num_periods]['departure'])
print(root['data'][num_periods]['lowRank'])
print(root['data'][num_periods]['highRank'])


#Scraping in HTML

import requests
from bs4 import BeautifulSoup as bsoup
    
search_url = 'http://publicinterestlegal.org/county-list/'
response = requests.get(search_url, headers={
            "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36"}).content
            
parsed_html = bsoup(response,"lxml")
list = parsed_html.find_all('tr') #to get the headers

my_result_list = [] #empty place to combine headers+sublist
for row in list:
    new_list=[] #place to put sublist
    for x in row.find_all('td'):
        new_list.append(x.text) #put the sublist in one place
    my_result_list.append(new_list) #add the sublist to the headers list

#Scraping using JSON

import requests

search_url = '#insertpeterbashilink#'
response = requests.get(search_url, headers={
            "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36"}).json()
 

numJumpShotsAttempt = 0
numJumpShotsMade = 0

for shot in response:
    if shot["ACTION_TYPE"]=="Jump Shot":
        numJumpShotsAttempt = numJumpShotsAttempt+1 #looking for all the jump shots made by a basketball player
    if shot["ACTION_TYPE"]=="Jump Shot" and shot["EVENT_TYPE"]=="Made Shot": #no. of successful shots
        numJumpShotsMade = numJumpShotsMade+1

percJumpShotMade = (numJumpShotsMade/numJumpShotsAttempt)*100 #calculating the percentage


            
print(percJumpShotMade)
